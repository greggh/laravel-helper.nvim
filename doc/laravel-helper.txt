*laravel-helper.txt*   For Neovim version 0.8.0   Last change: 2023 February 28

                     Laravel Helper for Neovim
                     =========================

Laravel Helper is a plugin that enhances Laravel development in Neovim with
IDE helper integration, artisan commands, and more.

Author:   Gregg Hernandez
License:  MIT
Homepage: https://github.com/greggh/laravel-helper.nvim

==============================================================================
CONTENTS                                             *laravel-helper-contents*

  1. Requirements ........................ |laravel-helper-requirements|
  2. Installation ........................ |laravel-helper-installation|
  3. Configuration ...................... |laravel-helper-configuration|
  4. Commands ................................. |laravel-helper-commands|
  5. Usage ....................................... |laravel-helper-usage|

==============================================================================
REQUIREMENTS                                      *laravel-helper-requirements*

- Neovim >= 0.8.0
- PHP installed locally, or Laravel Sail configured

CORE DEPENDENCIES ~

- 'nui.nvim': UI components for improved interface

RECOMMENDED DEPENDENCIES ~

The following plugins provide enhanced commands with subcommands and help:

- 'mega.cmdparse': Command parsing and interface (optional but recommended)
- 'mega.logging': Logging utilities (required by mega.cmdparse)

Without these, the plugin falls back to legacy commands.

==============================================================================
INSTALLATION                                      *laravel-helper-installation*

Using lazy.nvim:
>lua
{
  "greggh/laravel-helper.nvim",
  dependencies = {
    -- Enhanced command interface
    "ColinKennedy/mega.cmdparse",  -- Optional but recommended
    "ColinKennedy/mega.logging",   -- Required by mega.cmdparse
    
    -- Core dependencies
    "MunifTanjim/nui.nvim",
  },
  ft = { "php", "blade" },
  config = function()
    require("laravel-helper").setup({
      -- Optional configuration options
    })
  end,
}
<

==============================================================================
CONFIGURATION                                  *laravel-helper-configuration*

Laravel Helper can be configured with the following options:
>lua
require("laravel-helper").setup({
  -- Whether to automatically detect Laravel projects and offer IDE Helper generation
  auto_detect = true,
  
  -- Default timeout for Sail/Docker operations (in milliseconds)
  docker_timeout = 360000, -- 6 minutes
  
  -- Whether to automatically use Sail when available
  prefer_sail = true,
  
  -- Commands to run for IDE Helper generation
  commands = {
    "ide-helper:generate",    -- PHPDoc generation for Laravel classes
    "ide-helper:models -N",   -- PHPDoc generation for models (no write)
    "ide-helper:meta",        -- PhpStorm Meta file generation
  }
})
<

==============================================================================
COMMANDS                                            *laravel-helper-commands*

ENHANCED COMMAND STRUCTURE ~

When the plugin is installed with mega.cmdparse, it provides an enhanced 
command structure:

  :Laravel artisan <args>           Run Laravel Artisan commands
  :Laravel ide-helper generate      Generate Laravel IDE Helper files
  :Laravel ide-helper install       Install Laravel IDE Helper package
  :Laravel ide-helper debug         Toggle debug mode for IDE Helper

Use :Laravel --help to see all available commands and their descriptions.

LEGACY COMMANDS ~

If mega.cmdparse is not available, the plugin falls back to these commands:

  :LaravelArtisan <args>            Run Laravel Artisan commands
  :LaravelGenerateIDEHelper [php|sail]  Generate Laravel IDE Helper files 
  :LaravelInstallIDEHelper          Install Laravel IDE Helper package
  :LaravelIDEHelperToggleDebug      Toggle debug mode for IDE Helper

==============================================================================
USAGE                                                  *laravel-helper-usage*

By default, the plugin doesn't set any key mappings. You can add your own like 
this:
>lua
vim.api.nvim_create_autocmd("FileType", {
  pattern = "php",
  callback = function()
    -- Only set up mappings in Laravel projects
    if require("laravel-helper").is_laravel_project() then
      local opts = { buffer = 0, silent = true }
      
      -- Generate IDE Helper files
      vim.keymap.set("n", "<leader>lph", function()
        require("laravel-helper").generate_ide_helper(true)
      end, vim.tbl_extend("force", opts, { desc = "Generate Laravel IDE Helper files" }))
      
      -- Install IDE Helper if not already installed
      vim.keymap.set("n", "<leader>lpi", function()
        require("laravel-helper").install_ide_helper()
      end, vim.tbl_extend("force", opts, { desc = "Install Laravel IDE Helper" }))
      
      -- Toggle debug mode for Laravel IDE Helper
      vim.keymap.set("n", "<leader>lpd", function()
        require("laravel-helper").toggle_debug_mode()
      end, vim.tbl_extend("force", opts, { desc = "Toggle Laravel IDE Helper debug mode" }))
      
      -- Run Artisan commands
      vim.keymap.set("n", "<leader>lpa", function()
        require("laravel-helper").run_artisan_command()
      end, vim.tbl_extend("force", opts, { desc = "Run Laravel Artisan command" }))
    end
  end,
})
<
vim:tw=78:ts=2:ft=help:norl:
