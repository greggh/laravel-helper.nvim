name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Lua
        uses: leafo/gh-actions-lua@v9
        with:
          luaVersion: "5.1"
      
      - name: Install LuaRocks
        uses: leafo/gh-actions-luarocks@v4
      
      - name: Create cache directories
        run: mkdir -p ~/.luarocks
      
      - name: Cache LuaRocks dependencies
        uses: actions/cache@v3
        with:
          path: ~/.luarocks
          key: ${{ runner.os }}-luarocks-${{ hashFiles('**/*.rockspec') }}
          restore-keys: |
            ${{ runner.os }}-luarocks-
      
      - name: Install luacheck
        run: luarocks install luacheck
      
      - name: Check formatting with stylua
        uses: JohnnyMorganz/stylua-action@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: latest
          args: --check lua/
        
      - name: Run Luacheck
        run: luacheck lua/
  
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        neovim-version: [v0.8.0, v0.9.0, stable, nightly]
    
    name: Test with Neovim ${{ matrix.neovim-version }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Neovim
        uses: rhysd/action-setup-vim@v1
        with:
          neovim: true
          version: ${{ matrix.neovim-version }}
      
      - name: Install Lua
        uses: leafo/gh-actions-lua@v9
        with:
          luaVersion: "5.1"
      
      - name: Install LuaRocks
        uses: leafo/gh-actions-luarocks@v4
      
      - name: Create cache directories
        run: |
          mkdir -p ~/.luarocks
          mkdir -p ~/.local/share/nvim/site/pack
      
      - name: Cache LuaRocks dependencies
        uses: actions/cache@v3
        with:
          path: ~/.luarocks
          key: ${{ runner.os }}-luarocks-${{ hashFiles('**/*.rockspec') }}-${{ matrix.neovim-version }}
          restore-keys: |
            ${{ runner.os }}-luarocks-
      
      - name: Cache plugin dependencies
        uses: actions/cache@v3
        with:
          path: ~/.local/share/nvim/site/pack
          key: ${{ runner.os }}-nvim-plugins-${{ hashFiles('**/Makefile') }}-${{ matrix.neovim-version }}
          restore-keys: |
            ${{ runner.os }}-nvim-plugins-
      
      - name: Install test dependencies
        run: |
          # Install LuaFileSystem first as it's required by Busted
          luarocks install luafilesystem
          # Install test framework and assertions
          luarocks install busted
          luarocks install luassert
          luarocks install penlight
          # Install in local directory to ensure visibility
          mkdir -p ~/.local/share/nvim/site/pack/vendor/start
          git clone --depth=1 https://github.com/nvim-lua/plenary.nvim ~/.local/share/nvim/site/pack/vendor/start/plenary.nvim || true
      
      - name: Set up test environment
        run: |
          mkdir -p ~/.local/share/luarocks
          ln -sf $(luarocks path --lr-bin) ~/.local/share/luarocks/bin
          echo "$HOME/.local/share/luarocks/bin" >> $GITHUB_PATH
          echo "LUA_PATH='$(luarocks path --lr-path);./?.lua;./?/init.lua'" >> $GITHUB_ENV
          echo "LUA_CPATH='$(luarocks path --lr-cpath)'" >> $GITHUB_ENV
          busted --version
      
      - name: Display Neovim version
        run: nvim --version
      
      - name: Run tests
        run: |
          make test-debug
  
  documentation:
    needs: [lint, test]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Lua
        uses: leafo/gh-actions-lua@v9
        with:
          luaVersion: "5.1"
      
      - name: Install LuaRocks
        uses: leafo/gh-actions-luarocks@v4
      
      - name: Create cache directories
        run: mkdir -p ~/.luarocks
      
      - name: Cache LuaRocks dependencies
        uses: actions/cache@v3
        with:
          path: ~/.luarocks
          key: ${{ runner.os }}-luarocks-docs-${{ hashFiles('**/*.rockspec') }}
          restore-keys: |
            ${{ runner.os }}-luarocks-docs-
      
      - name: Install dependencies for ldoc
        run: |
          # Install dependencies required by ldoc
          sudo apt-get update
          sudo apt-get install -y lua-discount
          
      - name: Install ldoc
        run: luarocks install ldoc
      
      - name: Verify ldoc installation
        run: |
          which ldoc || echo "ldoc not found in PATH"
          ldoc --version || echo "ldoc command failed"
          
      - name: Generate documentation
        run: |
          mkdir -p doc/luadoc
          ldoc lua/ -d doc/luadoc -c .ldoc.cfg || echo "ldoc generation failed, but continuing"
          
      - name: List generated documentation
        run: ls -la doc/luadoc || echo "No documentation generated"